#include "boat.h"
#include "main.h"

Boat::Boat(color_t colorbase, color_t colorside) {
    this->position = glm::vec3(0, 0, 0);
    this->rotation = 0;
    speed = 1;
    // Our vertices. Three consecutive floats give a 3D vertex; Three consecutive vertices give a triangle.
    // A cube has 6 faces with 2 triangles each, so this makes 6*2=12 triangles, and 12*3 vertices
    float height = 2.0f;

    static const GLfloat side_data[] = {
        -2.4f,2.0f,-4.0f,
        -2.2f,2.0f,4.0f,
        -2.4f,2.0f,4.0f,
        -2.4f,2.0f,-4.0f,
        -2.2f,2.0f,-4.0f,
        -2.2f,2.0f,4.0f,
        -2.4f,2.0f,4.0f,
        -2.0f,0.5f,4.0f,
        -2.0f,0.0f,4.0f,
        -2.4f,2.0f,4.0f,
        -2.2f,2.0f,4.0f,
        -2.0f,0.5f,4.0f,
        -2.0f,0.0f,4.0f,
        -2.0f,0.5f,-4.0f,
        -2.0f,0.0f,-4.0f,
        -2.0f,0.0f,4.0f,
        -2.0f,0.5f,4.0f,
        -2.0f,0.5f,-4.0f,
        -2.0f,0.0f,-4.0f,
        -2.2f,2.0f,-4.0f,
        -2.4f,2.0f,-4.0f,
        -2.0f,0.0f,-4.0f,
        -2.0f,0.5f,-4.0f,
        -2.2f,2.0f,-4.0f,
        -2.4f,2.0f,-4.0f,
        -2.0f,0.0f,4.0f,
        -2.4f,2.0f,4.0f,
        -2.4f,2.0f,-4.0f,
        -2.0f,0.0f,-4.0f,
        -2.0f,0.0f,4.0f,
        -2.2f,2.0f,-4.0f,
        -2.0f,0.5f,4.0f,
        -2.2f,2.0f,4.0f,
        -2.2f,2.0f,-4.0f,
        -2.0f,0.5f,-4.0f,
        -2.0f,0.5f,4.0f,
        //next side
       -2.4f,2.0f,4.0f,
0.0f,2.0f,6.0f,
0.0f,2.0f,6.2f,
-2.4f,2.0f,4.0f,
-2.2f,2.0f,4.0f,
0.0f,2.0f,6.0f,
0.0f,2.0f,6.2f,
0.0f,0.5f,6.0f,
0.0f,0.0f,6.0f,
0.0f,2.0f,6.2f,
0.0f,2.0f,6.0f,
0.0f,0.5f,6.0f,
0.0f,0.0f,6.0f,
-2.0f,0.5f,4.0f,
-2.0f,0.0f,4.0f,
0.0f,0.0f,6.0f,
0.0f,0.5f,6.0f,
-2.0f,0.5f,4.0f,
-2.0f,0.0f,4.0f,
-2.2f,2.0f,4.0f,
-2.4f,2.0f,4.0f,
-2.0f,0.0f,4.0f,
-2.0f,0.5f,4.0f,
-2.2f,2.0f,4.0f,
-2.4f,2.0f,4.0f,
0.0f,0.0f,6.0f,
0.0f,2.0f,6.2f,
-2.4f,2.0f,4.0f,
-2.0f,0.0f,4.0f,
0.0f,0.0f,6.0f,
-2.2f,2.0f,4.0f,
0.0f,0.5f,6.0f,
0.0f,2.0f,6.0f,
-2.2f,2.0f,4.0f,
-2.0f,0.5f,4.0f,
0.0f,0.5f,6.0f, 
//side
-2.4f,2.0f,-4.0f,
0.0f,2.0f,-6.0f,
0.0f,2.0f,-6.2f,
-2.4f,2.0f,-4.0f,
-2.2f,2.0f,-4.0f,
0.0f,2.0f,-6.0f,
0.0f,2.0f,-6.2f,
0.0f,0.5f,-6.0f,
0.0f,0.0f,-6.0f,
0.0f,2.0f,-6.2f,
0.0f,2.0f,-6.0f,
0.0f,0.5f,-6.0f,
0.0f,0.0f,-6.0f,
-2.0f,0.5f,-4.0f,
-2.0f,0.0f,-4.0f,
0.0f,0.0f,-6.0f,
0.0f,0.5f,-6.0f,
-2.0f,0.5f,-4.0f,
-2.0f,0.0f,-4.0f,
-2.2f,2.0f,-4.0f,
-2.4f,2.0f,-4.0f,
-2.0f,0.0f,-4.0f,
-2.0f,0.5f,-4.0f,
-2.2f,2.0f,-4.0f,
-2.4f,2.0f,-4.0f,
0.0f,0.0f,-6.0f,
0.0f,2.0f,-6.2f,
-2.4f,2.0f,-4.0f,
-2.0f,0.0f,-4.0f,
0.0f,0.0f,-6.0f,
-2.2f,2.0f,-4.0f,
0.0f,0.5f,-6.0f,
0.0f,2.0f,-6.0f,
-2.2f,2.0f,-4.0f,
-2.0f,0.5f,-4.0f,
0.0f,0.5f,-6.0f,
//side
2.4f,2.0f,-4.0f,
0.0f,2.0f,-6.0f,
0.0f,2.0f,-6.2f,
2.4f,2.0f,-4.0f,
2.2f,2.0f,-4.0f,
0.0f,2.0f,-6.0f,
0.0f,2.0f,-6.2f,
0.0f,0.5f,-6.0f,
0.0f,0.0f,-6.0f,
0.0f,2.0f,-6.2f,
0.0f,2.0f,-6.0f,
0.0f,0.5f,-6.0f,
0.0f,0.0f,-6.0f,
2.0f,0.5f,-4.0f,
2.0f,0.0f,-4.0f,
0.0f,0.0f,-6.0f,
0.0f,0.5f,-6.0f,
2.0f,0.5f,-4.0f,
2.0f,0.0f,-4.0f,
2.2f,2.0f,-4.0f,
2.4f,2.0f,-4.0f,
2.0f,0.0f,-4.0f,
2.0f,0.5f,-4.0f,
2.2f,2.0f,-4.0f,
2.4f,2.0f,-4.0f,
0.0f,0.0f,-6.0f,
0.0f,2.0f,-6.2f,
2.4f,2.0f,-4.0f,
2.0f,0.0f,-4.0f,
0.0f,0.0f,-6.0f,
2.2f,2.0f,-4.0f,
0.0f,0.5f,-6.0f,
0.0f,2.0f,-6.0f,
2.2f,2.0f,-4.0f,
2.0f,0.5f,-4.0f,
0.0f,0.5f,-6.0f,
//side
        2.4f,2.0f,-4.0f,
        2.2f,2.0f,4.0f,
        2.4f,2.0f,4.0f,
        2.4f,2.0f,-4.0f,
        2.2f,2.0f,-4.0f,
        2.2f,2.0f,4.0f,
        2.4f,2.0f,4.0f,
        2.0f,0.5f,4.0f,
        2.0f,0.0f,4.0f,
        2.4f,2.0f,4.0f,
        2.2f,2.0f,4.0f,
        2.0f,0.5f,4.0f,
        2.0f,0.0f,4.0f,
        2.0f,0.5f,-4.0f,
        2.0f,0.0f,-4.0f,
        2.0f,0.0f,4.0f,
        2.0f,0.5f,4.0f,
        2.0f,0.5f,-4.0f,
        2.0f,0.0f,-4.0f,
        2.2f,2.0f,-4.0f,
        2.4f,2.0f,-4.0f,
        2.0f,0.0f,-4.0f,
        2.0f,0.5f,-4.0f,
        2.2f,2.0f,-4.0f,
        2.4f,2.0f,-4.0f,
        2.0f,0.0f,4.0f,
        2.4f,2.0f,4.0f,
        2.4f,2.0f,-4.0f,
        2.0f,0.0f,-4.0f,
        2.0f,0.0f,4.0f,
        2.2f,2.0f,-4.0f,
        2.0f,0.5f,4.0f,
        2.2f,2.0f,4.0f,
        2.2f,2.0f,-4.0f,
        2.0f,0.5f,-4.0f,
        2.0f,0.5f,4.0f,
        //next side
       2.4f,2.0f,4.0f,
0.0f,2.0f,6.0f,
0.0f,2.0f,6.2f,
2.4f,2.0f,4.0f,
2.2f,2.0f,4.0f,
0.0f,2.0f,6.0f,
0.0f,2.0f,6.2f,
0.0f,0.5f,6.0f,
0.0f,0.0f,6.0f,
0.0f,2.0f,6.2f,
0.0f,2.0f,6.0f,
0.0f,0.5f,6.0f,
0.0f,0.0f,6.0f,
2.0f,0.5f,4.0f,
2.0f,0.0f,4.0f,
0.0f,0.0f,6.0f,
0.0f,0.5f,6.0f,
2.0f,0.5f,4.0f,
2.0f,0.0f,4.0f,
2.2f,2.0f,4.0f,
2.4f,2.0f,4.0f,
2.0f,0.0f,4.0f,
2.0f,0.5f,4.0f,
2.2f,2.0f,4.0f,
2.4f,2.0f,4.0f,
0.0f,0.0f,6.0f,
0.0f,2.0f,6.2f,
2.4f,2.0f,4.0f,
2.0f,0.0f,4.0f,
0.0f,0.0f,6.0f,
2.2f,2.0f,4.0f,
0.0f,0.5f,6.0f,
0.0f,2.0f,6.0f,
2.2f,2.0f,4.0f,
2.0f,0.5f,4.0f,
0.0f,0.5f,6.0f, 
    };

    static const GLfloat vertex_buffer_data[] = {
        //bottom
    -2.0f,0.0f,-4.0f,
    -2.0f,0.5f,4.0f,
    -2.0f,0.0f,4.0f,
    -2.0f,0.0f,-4.0f,
    -2.0f,0.5f,-4.0f,
    -2.0f,0.5f,4.0f,
    -2.0f,0.0f,4.0f,
    2.0f,0.5f,4.0f,
    2.0f,0.0f,4.0f,
    -2.0f,0.0f,4.0f,
    -2.0f,0.5f,4.0f,
    2.0f,0.5f,4.0f,
    2.0f,0.0f,4.0f,
    2.0f,0.5f,-4.0f,
    2.0f,0.0f,-4.0f,
    2.0f,0.0f,4.0f,
    2.0f,0.5f,4.0f,
    2.0f,0.5f,-4.0f,
    2.0f,0.0f,-4.0f,
    -2.0f,0.5f,-4.0f,
    -2.0f,0.0f,-4.0f,
    2.0f,0.0f,-4.0f,
    2.0f,0.5f,-4.0f,
    -2.0f,0.5f,-4.0f,
    -2.0f,0.0f,-4.0f,
    2.0f,0.0f,4.0f,
    -2.0f,0.0f,4.0f,
    -2.0f,0.0f,-4.0f,
    2.0f,0.0f,-4.0f,
    2.0f,0.0f,4.0f,
    -2.0f,0.5f,-4.0f,
    2.0f,0.5f,4.0f,
    -2.0f,0.5f,4.0f,
    -2.0f,0.5f,-4.0f,
    2.0f,0.5f,-4.0f,
    2.0f,0.5f,4.0f,
    //front triangle
    -2.0f,0.0f,4.0f,
    0.0f,0.5f,6.0f,
    0.0f,0.0f,6.0f,
    -2.0f,0.0f,4.0f,
    -2.0f,0.5f,4.0f,
    0.0f,0.5f,6.0f,
    0.0f,0.0f,6.0f,
    2.0f,0.5f,4.0f,
    2.0f,0.0f,4.0f,
    0.0f,0.0f,6.0f,
    0.0f,0.5f,6.0f,
    2.0f,0.5f,4.0f,
    2.0f,0.0f,4.0f,
    -2.0f,0.5f,4.0f,
    -2.0f,0.0f,4.0f,
    2.0f,0.0f,4.0f,
    2.0f,0.5f,4.0f,
    -2.0f,0.5f,4.0f,
    -2.0f,0.0f,4.0f,
    0.0f,0.0f,6.0f,
    2.0f,0.0f,4.0f,
    -2.0f,0.5f,4.0f,
    0.0f,0.5f,6.0f,
    2.0f,0.5f,4.0f,
    //back triangle
    -2.0f,0.0f,-4.0f,
    0.0f,0.5f,-6.0f,
    0.0f,0.0f,-6.0f,
    -2.0f,0.0f,-4.0f,
    -2.0f,0.5f,-4.0f,
    0.0f,0.5f,-6.0f,
    0.0f,0.0f,-6.0f,
    2.0f,0.5f,-4.0f,
    2.0f,0.0f,-4.0f,
    0.0f,0.0f,-6.0f,
    0.0f,0.5f,-6.0f,
    2.0f,0.5f,-4.0f,
    2.0f,0.0f,-4.0f,
    -2.0f,0.5f,-4.0f,
    -2.0f,0.0f,-4.0f,
    2.0f,0.0f,-4.0f,
    2.0f,0.5f,-4.0f,
    -2.0f,0.5f,-4.0f,
    -2.0f,0.0f,-4.0f,
    0.0f,0.0f,-6.0f,
    2.0f,0.0f,-4.0f,
    -2.0f,0.5f,-4.0f,
    0.0f,0.5f,-6.0f,
    2.0f,0.5f,-4.0f,
    };

    this->base = create3DObject(GL_TRIANGLES, (12+8+8)*3, vertex_buffer_data, colorbase, GL_FILL);
    this->side = create3DObject(GL_TRIANGLES, (12*6)*3, side_data, colorside, GL_FILL);
}

void Boat::draw(glm::mat4 VP) {
    Matrices.model = glm::mat4(1.0f);
    glm::mat4 translate = glm::translate (this->position);    // glTranslatef
    glm::mat4 rotate    = glm::rotate((float) (this->rotation * M_PI / 180.0f), glm::vec3(1, 0, 0));
    // No need as coords centered at 0, 0, 0 of cube arouund which we waant to rotate
    // rotate          = rotate * glm::translate(glm::vec3(0, -0.6, 0));
    Matrices.model *= (translate * rotate);
    glm::mat4 MVP = VP * Matrices.model;
    glUniformMatrix4fv(Matrices.MatrixID, 1, GL_FALSE, &MVP[0][0]);
    draw3DObject(this->base);
    draw3DObject(this->side);
}
